Imports System.DirectoryServices
Imports System.Text
Imports Meijer.Ent
Imports Interop.ActiveDs
Imports System.Data.Odbc

Public Class CPassword
    Inherits CMeijerObject
    Private m_strLDAPServer As String
    Private m_strDomain As String
    Private m_strUserContainer As String = "OU=People"
    Private m_strUserID As String
    Private m_strPassword As String
    Private m_strDSN As String
    Private m_strDefaultPassword As String
    Const APPLICATION As String = "AD Reset"


    Public Sub New(ByVal v_intEnviroment As Integer)
        GetConfiguration(v_intEnviroment)
    End Sub

    Public Sub SetPassword(ByVal v_strOwnerID As String, ByVal v_strUserid As String, ByVal v_strPWD As String)
        Dim sbConnect As New StringBuilder("LDAP://")
        Dim de As DirectoryEntry
        Dim searcher As System.DirectoryServices.DirectorySearcher
        Dim srcResults As SearchResultCollection
        Dim srResult As SearchResult
        Dim alUsers As New ArrayList
        Dim a_strUser() As String
        Dim strUserID As String
        Dim objValue As Object
        Dim strline As String

        Try
            ' Build LDAP connection string
            With sbConnect
                '.Append(m_strLDAPServer)
                '.Append("/")
                .Append("CN=")
                .Append(v_strUserid)
                .Append(",")
                .Append(m_strUserContainer)
                .Append(",")
                .Append(m_strDomain)
            End With

            de = New DirectoryEntry(sbConnect.ToString, Trim(m_strUserID), Trim(m_strPassword))
            'de.AuthenticationType = AuthenticationTypes.Delegation
            Dim obj As Object = de.NativeObject
            de.Invoke("SetPassword", New Object() {v_strPWD})
            de.CommitChanges()
            'LogSetPasswordInfo(v_strOwnerID, v_strUserid)

        Catch ex As Exception
            'Dim obj As New Meijer.Ent.CApplicationLog
            'obj.Environment = Me.Environment
            'obj.LogMessage("PSSWRD", "PSSWRD", "SYSTEM", ex.Message, "CPassword")
            Throw New Exception("Line: " & strline & " " & ex.ToString & " Connect String: " & sbConnect.ToString())
            'Throw ex
        Finally
            If Not de Is Nothing Then
                de.Close()
                de.Dispose()
            End If
        End Try
    End Sub
    Public Sub ChangePassword(ByVal v_strUserid As String, ByVal strOldPWd As String, ByVal strNewPWD As String)
        Dim sbConnect As New StringBuilder("LDAP://")
        Dim de As DirectoryEntry

        Try
            ' Build LDAP connection string
            With sbConnect
                .Append(m_strLDAPServer)
                .Append("/")
                .Append("CN=")
                .Append(v_strUserid)
                .Append(",")
                .Append(m_strUserContainer)
                .Append(",")
                .Append(m_strDomain)
            End With
            de = New DirectoryEntry(sbConnect.ToString, m_strUserID, m_strPassword)
            de.Invoke("ChangePassword", New Object() {strOldPWd, strNewPWD})
            de.CommitChanges()
            de.Close()
            de.Dispose()
        Catch ex As Exception
            'Dim obj As New Meijer.Ent.CApplicationLog
            'obj.Environment = Me.Environment
            'obj.LogMessage("PSSWRD", "PSSWRD", "SYSTEM", ex.Message, "CPassword")
            Throw ex
        Finally
            If Not de Is Nothing Then
                de.Close()
                de.Dispose()
            End If
        End Try
    End Sub
    Private Sub GetConfiguration(ByVal v_intEnviroment As Integer)
        Select Case v_intEnviroment
            Case MeijerEnvironmentEnum.DEVELOPMENT
                m_strLDAPServer = System.Configuration.ConfigurationSettings.AppSettings("devdcserver")
                m_strDomain = System.Configuration.ConfigurationSettings.AppSettings("devdomain")
                m_strUserID = System.Configuration.ConfigurationSettings.AppSettings("devuserid")
                m_strPassword = System.Configuration.ConfigurationSettings.AppSettings("devpassword")
                m_strDSN = System.Configuration.ConfigurationSettings.AppSettings("devdsn")
            Case MeijerEnvironmentEnum.INTEGRATION
                m_strLDAPServer = System.Configuration.ConfigurationSettings.AppSettings("intdcserver")
                m_strDomain = System.Configuration.ConfigurationSettings.AppSettings("intdomain")
                m_strUserID = System.Configuration.ConfigurationSettings.AppSettings("intuserid")
                m_strPassword = System.Configuration.ConfigurationSettings.AppSettings("intpassword")
                m_strDSN = System.Configuration.ConfigurationSettings.AppSettings("intdsn")
            Case MeijerEnvironmentEnum.CERTIFICATION
                m_strLDAPServer = System.Configuration.ConfigurationSettings.AppSettings("certdcserver")
                m_strDomain = System.Configuration.ConfigurationSettings.AppSettings("certdomain")
                m_strUserID = System.Configuration.ConfigurationSettings.AppSettings("certuserid")
                m_strPassword = System.Configuration.ConfigurationSettings.AppSettings("certpassword")
                m_strDSN = System.Configuration.ConfigurationSettings.AppSettings("certdsn")
            Case Else
                m_strLDAPServer = System.Configuration.ConfigurationSettings.AppSettings("dcserver")
                m_strDomain = System.Configuration.ConfigurationSettings.AppSettings("domain")
                m_strUserID = System.Configuration.ConfigurationSettings.AppSettings("userid")
                m_strPassword = System.Configuration.ConfigurationSettings.AppSettings("password")
                m_strDSN = System.Configuration.ConfigurationSettings.AppSettings("dsn")
        End Select
    End Sub
    'Private Sub LogSetPasswordInfo(ByVal v_strOwnerID As String, ByVal v_strUserid As String)
    '    Dim colParameters As New Collection
    '    Dim objSQLDATA As Meijer.Ent.CSQLData
    '    Dim strCommandText As String
    '    strCommandText = "pwdrset_app.mpa_resetpassword_ins"
    '    Try
    '        colParameters.Add(New SqlClient.SqlParameter("@pwd_rset_user_id", SqlDbType.VarChar, 11, ParameterDirection.Input, False, 0, 0, "@pwd_rset_user_id	", DataRowVersion.Current, v_strUserid))
    '        colParameters.Add(New SqlClient.SqlParameter("@apl_nm", SqlDbType.VarChar, 50, ParameterDirection.Input, False, 0, 0, "@apl_nm", DataRowVersion.Current, APPLICATION))
    '        colParameters.Add(New SqlClient.SqlParameter("@rw_udt_user_id", SqlDbType.VarChar, 15, ParameterDirection.Input, False, 0, 0, "@rw_udt_user_id", DataRowVersion.Current, v_strOwnerID))

    '        objSQLDATA = New Meijer.Ent.CSQLData(m_strDSN)
    '        objSQLDATA.Execute(strCommandText, CommandType.StoredProcedure, colParameters)
    '    Catch e As Exception
    '        'Dim obj As New Meijer.Ent.CApplicationLog
    '        'obj.Environment = Me.Environment
    '        'obj.LogMessage("PSSWRD", "PSSWRD", "SYSTEM", e.Message, "CPassword")
    '        Throw e
    '    Finally
    '        If Not objSQLDATA Is Nothing Then
    '            objSQLDATA.Close()
    '        End If
    '    End Try
    'End Sub
    'Public Function GetBusinessCategory(ByVal v_strUserID As String) As String
    '    '*=======================================================================================
    '    '* Name: GetRoleName
    '    '* Purpose: Retrieve the business category for a user.
    '    '* Input: UserID (String)
    '    '* Output: None.
    '    '* Returns: BusinessCategory
    '    *=======================================================================================
    '    Dim objBusinessCategory As DirectoryEntry
    '    Dim sbConnect As New StringBuilder("LDAP://")
    '    Dim objValue As Object
    '    Dim I As Integer = 0
    '    Dim alUsers As New ArrayList
    '    Dim strBusinessCategory As String = String.Empty
    '     Build LDAP connection string
    '    With sbConnect
    '        .Append(m_strLDAPServer)
    '        .Append("/")
    '        .Append("CN=")
    '        .Append(v_strUserID)
    '        .Append(",")
    '        .Append(m_strUserContainer)
    '        .Append(",")
    '        .Append(m_strDomain)
    '    End With
    '    'Connect to the LDAP service
    '    Try
    '        objBusinessCategory = New DirectoryEntry(sbConnect.ToString, m_strUserID, m_strPassword)
    '        For Each objValue In objBusinessCategory.Properties("businessCategory")
    '            strBusinessCategory = objValue.ToString().ToUpper()
    '            Exit For
    '        Next
    '        If strBusinessCategory = String.Empty Then Throw New Exception("Password could not be reset because: Could not get business category for " & v_strUserID)
    '    Catch X As Exception
    '        Dim obj As New Meijer.Ent.CApplicationLog
    '        obj.Environment = Me.Environment
    '        obj.LogMessage("PSSWRD", "PSSWRD", "SYSTEM", X.Message, "CPassword")
    '        Throw X
    '    Finally
    '         Close LDAP connection
    '        objBusinessCategory.Close()
    '        objBusinessCategory.Dispose()
    '    End Try
    '    Return strBusinessCategory
    'End Function
    Public Overrides Function IsAlive() As Boolean

    End Function
End Class
